body { overflow: auto; } /* make the app scrollable */

/* ==== Utilities ==== */

.flex-one { flex: 1; }
.cursor-pointer { cursor: pointer; }
.cursor-help { cursor: help; }
.cursor-progress { cursor: progress; }
.nowrap { white-space: nowrap; }
.text-ellipsis { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%; }
.text-sm { font-size: 0.8rem; }
.help-text { cursor: help; text-decoration: underline; text-decoration-style: dotted; text-underline-offset: 2px; }
.link-alike { cursor: pointer; } .link-alike:hover { text-decoration: underline; }
.muted-control { cursor: pointer; opacity: 0.5; } .muted-control:hover { opacity: 1; }

.o-0 { opacity: 0; }
.o-25 { opacity: .25; }
.o-50 { opacity: .5; }
.o-75 { opacity: .75; }
.o-100 { opacity: 1; }
.o-hover-100:hover { opacity: 1 }

.text-buy { color: var(--altamoon-buy-color)!important; }
.text-sell { color: var(--altamoon-sell-color)!important; }
.text-stop-buy { color: var(--altamoon-stop-buy-color)!important; }
.text-stop-sell { color: var(--altamoon-stop-sell-color)!important; }

/* temporary fix until reactstrap is updated */
button.close {
  background-color: transparent;
  border: 0;
  color: inherit;
  font-size: 2rem;
  line-height: 1;
}

/* dropdown caret should have zero margin when there is no text */
.dropdown-toggle.empty::after { margin: 0; }

/* temporary fix for bootswatch theme to make handle white for selects */
select.form-control.form-select, select.form-control.form-select:focus {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  background-position: right 0.75rem center;
  background-repeat: no-repeat;
  background-size: 16px 12px;
}

/* ==== Bootstrap Tooltip ==== */
.tooltip { pointer-events: auto !important;; }
.tooltip-inner { max-width: 500px !important; }

/* ==== react-grid ==== */
.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
}
.react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top;
}
.react-grid-item.cssTransforms {
  transition-property: transform;
}
.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.dropping {
  visibility: hidden;
}

.react-grid-item.react-grid-placeholder {
  opacity: 0.2;
  transition-duration: 100ms;
  z-index: 2;
  user-select: none;
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

.react-grid-item > .react-resizable-handle::after {
  content: '';
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 5px;
  height: 5px;
  border-right: 2px solid rgba(0, 0, 0, 0.4);
  border-bottom: 2px solid rgba(0, 0, 0, 0.4);
  z-index: 20;
}

.react-resizable-hide > .react-resizable-handle {
  display: none;
}

/* ==== Noty ==== */
.noty_type__success {
  background-color: var(--bs-success)!important;
  border-bottom: 1px solid var(--bs-success)!important;
}

.noty_type__error {
  background-color: var(--bs-danger)!important;
  border-bottom: 1px solid var(--bs-danger)!important;
}

.noty_type__alert {
  background-color: var(--bs-info)!important;
  border-bottom: 1px solid var(--bs-info)!important;
  color: #fff!important;
}

/* ==== Random overrides ==== */
.tooltip { pointer-events: none; }
